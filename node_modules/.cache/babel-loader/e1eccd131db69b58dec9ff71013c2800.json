{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nexport const service = {\n  auth,\n  // authoriz,\n  gettickets,\n  createquestion,\n  createsetting,\n  addemployee\n}; // async function authoriz(data){\n//     let responce = await fetch('http://test.4dev.kz:8890/token',\n//         {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 // 'Authorization': 'Bearer ' + this.access_token\n//             },\n//             body: \"grant_type=&username=\" + data.email  + \"&password=\" + data.password + \"&scope=&client_id=&client_secret=\" \n//         })\n//         // .then(async function(res) { \n//         //     if(res.ok) {\n//         //       let dataResp = await res.json()\n//         //       localStorage.setItem('token', dataResp.access_token)\n//         //       goHome()\n//         //     }\n//         // })\n//       return responce;\n// }\n\nasync function auth(data) {\n  let responce = await fetch('http://test.4dev.kz:8890/token', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Basic ' + atob(data.email + ':' + data.password)\n    }\n  }); // .then(async function(res) { \n  //     if(res.ok) {\n  //       let dataResp = await res.json()\n  //       localStorage.setItem('token', dataResp.access_token)\n  //       goHome()\n  //     }\n  // })\n\n  return responce;\n}\n\nasync function gettickets(data) {\n  let responce = await fetch('http://192.168.31.36:8000/Tasks/All', {\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Bearer ' + data.access_token\n    }\n  });\n  return responce;\n}\n\nasync function createquestion(data) {\n  let responce = await fetch('http://192.168.31.36:8000/Tasks/Create', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    },\n    body: JSON.stringify(data)\n  });\n  return responce;\n}\n\nasync function createsetting(data) {\n  let responce = await fetch('http://192.168.31.36:8000/Tasks/Create', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    },\n    body: JSON.stringify(data)\n  });\n  return responce;\n}\n\nasync function addemployee(data) {\n  let responce = await fetch('http://192.168.31.36:8000/User/Create', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    },\n    body: JSON.stringify(data)\n  });\n  return responce;\n}","map":{"version":3,"names":["service","auth","gettickets","createquestion","createsetting","addemployee","data","responce","fetch","method","headers","atob","email","password","access_token","localStorage","getItem","body","JSON","stringify"],"sources":["C:/Users/GosUser_02/Desktop/GosuDesk/src/services/index.js"],"sourcesContent":["export const service = {\r\n    auth,\r\n    // authoriz,\r\n    gettickets,\r\n    createquestion,\r\n    createsetting,\r\n    addemployee,\r\n}\r\n\r\n\r\n// async function authoriz(data){\r\n//     let responce = await fetch('http://test.4dev.kz:8890/token',\r\n//         {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 // 'Authorization': 'Bearer ' + this.access_token\r\n//             },\r\n//             body: \"grant_type=&username=\" + data.email  + \"&password=\" + data.password + \"&scope=&client_id=&client_secret=\" \r\n//         })\r\n//         // .then(async function(res) { \r\n//         //     if(res.ok) {\r\n//         //       let dataResp = await res.json()\r\n//         //       localStorage.setItem('token', dataResp.access_token)\r\n\r\n//         //       goHome()\r\n//         //     }\r\n//         // })\r\n\r\n\r\n//       return responce;\r\n// }\r\n\r\nasync function auth(data){\r\n    let responce = await fetch('http://test.4dev.kz:8890/token',\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic ' + atob(data.email + ':' + data.password)\r\n            }\r\n        })\r\n        // .then(async function(res) { \r\n        //     if(res.ok) {\r\n        //       let dataResp = await res.json()\r\n        //       localStorage.setItem('token', dataResp.access_token)\r\n\r\n        //       goHome()\r\n        //     }\r\n        // })\r\n      return responce;\r\n}\r\n\r\nasync function gettickets(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/Tasks/All',\r\n        {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': 'Bearer ' + data.access_token\r\n            },\r\n        })\r\n      return responce;\r\n}\r\n\r\nasync function createquestion(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/Tasks/Create',\r\n        {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n      return responce;\r\n}\r\n\r\nasync function createsetting(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/Tasks/Create',\r\n        {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n      return responce;\r\n}\r\n\r\nasync function addemployee(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/User/Create',\r\n    {\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    return responce;\r\n}\r\n"],"mappings":";AAAA,OAAO,MAAMA,OAAO,GAAG;EACnBC,IADmB;EAEnB;EACAC,UAHmB;EAInBC,cAJmB;EAKnBC,aALmB;EAMnBC;AANmB,CAAhB,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;;AAEA,eAAeJ,IAAf,CAAoBK,IAApB,EAAyB;EACrB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EACtB;IACIC,MAAM,EAAE,KADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAiB,WAAWC,IAAI,CAACL,IAAI,CAACM,KAAL,GAAa,GAAb,GAAmBN,IAAI,CAACO,QAAzB;IAF3B;EAFb,CADsB,CAA1B,CADqB,CASjB;EACA;EACA;EACA;EAEA;EACA;EACA;;EACF,OAAON,QAAP;AACL;;AAED,eAAeL,UAAf,CAA0BI,IAA1B,EAA+B;EAC3B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EACtB;IACIC,MAAM,EAAE,KADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,mCADX;MAEL,iBAAiB,YAAYJ,IAAI,CAACQ;IAF7B;EAFb,CADsB,CAA1B;EAQE,OAAOP,QAAP;AACL;;AAED,eAAeJ,cAAf,CAA8BG,IAA9B,EAAmC;EAC/B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EACtB;IACIC,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAiB,YAAYK,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFxB,CAFb;IAMIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;EANV,CADsB,CAA1B;EASE,OAAOC,QAAP;AACL;;AAED,eAAeH,aAAf,CAA6BE,IAA7B,EAAkC;EAC9B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EACtB;IACIC,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAiB,YAAYK,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFxB,CAFb;IAMIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;EANV,CADsB,CAA1B;EASE,OAAOC,QAAP;AACL;;AAED,eAAeF,WAAf,CAA2BC,IAA3B,EAAgC;EAC5B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAC1B;IACIC,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAiB,YAAYK,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFxB,CAFb;IAMIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;EANV,CAD0B,CAA1B;EASA,OAAOC,QAAP;AACH"},"metadata":{},"sourceType":"module"}