{"ast":null,"code":"export const service = {\n  auth,\n  authoriz,\n  gettickets,\n  createquestion,\n  createsetting,\n  addemployee\n};\n\nasync function authoriz(data) {\n  let responce = await fetch('http://192.168.31.36:8000/Token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded' // 'Authorization': 'Bearer ' + this.access_token\n\n    },\n    body: \"grant_type=&username=\" + data.email + \"&password=\" + data.password + \"&scope=&client_id=&client_secret=\"\n  }); // .then(async function(res) { \n  //     if(res.ok) {\n  //       let dataResp = await res.json()\n  //       localStorage.setItem('token', dataResp.access_token)\n  //       goHome()\n  //     }\n  // })\n\n  return responce;\n}\n\nasync function auth(data) {\n  let responce = await fetch('http://192.168.31.36:8000/Token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded' // 'Authorization': 'Bearer ' + this.access_token\n\n    },\n    body: \"grant_type=&username=\" + data.email + \"&password=\" + data.password + \"&scope=&client_id=&client_secret=\"\n  }); // .then(async function(res) { \n  //     if(res.ok) {\n  //       let dataResp = await res.json()\n  //       localStorage.setItem('token', dataResp.access_token)\n  //       goHome()\n  //     }\n  // })\n\n  return responce;\n}\n\nasync function gettickets(data) {\n  let responce = await fetch('http://192.168.31.36:8000/Tasks/All', {\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Bearer ' + data.access_token\n    }\n  });\n  return responce;\n}\n\nasync function createquestion(data) {\n  let responce = await fetch('http://192.168.31.36:8000/Tasks/Create', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    },\n    body: JSON.stringify(data)\n  });\n  return responce;\n}\n\nasync function createsetting(data) {\n  let responce = await fetch('http://192.168.31.36:8000/Tasks/Create', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    },\n    body: JSON.stringify(data)\n  });\n  return responce;\n}\n\nasync function addemployee(data) {\n  let responce = await fetch('http://192.168.31.36:8000/User/Create', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    },\n    body: JSON.stringify(data)\n  });\n  return responce;\n}","map":{"version":3,"names":["service","auth","authoriz","gettickets","createquestion","createsetting","addemployee","data","responce","fetch","method","headers","body","email","password","access_token","localStorage","getItem","JSON","stringify"],"sources":["C:/Users/GosUser_02/Desktop/GosuDesk/src/services/index.js"],"sourcesContent":["export const service = {\r\n    auth,\r\n    authoriz,\r\n    gettickets,\r\n    createquestion,\r\n    createsetting,\r\n    addemployee,\r\n}\r\n\r\n\r\nasync function authoriz(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/Token',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // 'Authorization': 'Bearer ' + this.access_token\r\n            },\r\n            body: \"grant_type=&username=\" + data.email  + \"&password=\" + data.password + \"&scope=&client_id=&client_secret=\" \r\n        })\r\n        // .then(async function(res) { \r\n        //     if(res.ok) {\r\n        //       let dataResp = await res.json()\r\n        //       localStorage.setItem('token', dataResp.access_token)\r\n\r\n        //       goHome()\r\n        //     }\r\n        // })\r\n\r\n\r\n      return responce;\r\n}\r\n\r\nasync function auth(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/Token',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // 'Authorization': 'Bearer ' + this.access_token\r\n            },\r\n            body: \"grant_type=&username=\" + data.email  + \"&password=\" + data.password + \"&scope=&client_id=&client_secret=\" \r\n        })\r\n        // .then(async function(res) { \r\n        //     if(res.ok) {\r\n        //       let dataResp = await res.json()\r\n        //       localStorage.setItem('token', dataResp.access_token)\r\n\r\n        //       goHome()\r\n        //     }\r\n        // })\r\n\r\n\r\n      return responce;\r\n}\r\n\r\nasync function gettickets(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/Tasks/All',\r\n        {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': 'Bearer ' + data.access_token\r\n            },\r\n        })\r\n      return responce;\r\n}\r\n\r\nasync function createquestion(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/Tasks/Create',\r\n        {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n      return responce;\r\n}\r\n\r\nasync function createsetting(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/Tasks/Create',\r\n        {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n      return responce;\r\n}\r\n\r\nasync function addemployee(data){\r\n    let responce = await fetch('http://192.168.31.36:8000/User/Create',\r\n    {\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    return responce;\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;EACnBC,IADmB;EAEnBC,QAFmB;EAGnBC,UAHmB;EAInBC,cAJmB;EAKnBC,aALmB;EAMnBC;AANmB,CAAhB;;AAUP,eAAeJ,QAAf,CAAwBK,IAAxB,EAA6B;EACzB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EACtB;IACIC,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,mCADX,CAEL;;IAFK,CAFb;IAMIC,IAAI,EAAE,0BAA0BL,IAAI,CAACM,KAA/B,GAAwC,YAAxC,GAAuDN,IAAI,CAACO,QAA5D,GAAuE;EANjF,CADsB,CAA1B,CADyB,CAUrB;EACA;EACA;EACA;EAEA;EACA;EACA;;EAGF,OAAON,QAAP;AACL;;AAED,eAAeP,IAAf,CAAoBM,IAApB,EAAyB;EACrB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EACtB;IACIC,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,mCADX,CAEL;;IAFK,CAFb;IAMIC,IAAI,EAAE,0BAA0BL,IAAI,CAACM,KAA/B,GAAwC,YAAxC,GAAuDN,IAAI,CAACO,QAA5D,GAAuE;EANjF,CADsB,CAA1B,CADqB,CAUjB;EACA;EACA;EACA;EAEA;EACA;EACA;;EAGF,OAAON,QAAP;AACL;;AAED,eAAeL,UAAf,CAA0BI,IAA1B,EAA+B;EAC3B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EACtB;IACIC,MAAM,EAAE,KADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,mCADX;MAEL,iBAAiB,YAAYJ,IAAI,CAACQ;IAF7B;EAFb,CADsB,CAA1B;EAQE,OAAOP,QAAP;AACL;;AAED,eAAeJ,cAAf,CAA8BG,IAA9B,EAAmC;EAC/B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EACtB;IACIC,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAiB,YAAYK,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFxB,CAFb;IAMIL,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeZ,IAAf;EANV,CADsB,CAA1B;EASE,OAAOC,QAAP;AACL;;AAED,eAAeH,aAAf,CAA6BE,IAA7B,EAAkC;EAC9B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EACtB;IACIC,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAiB,YAAYK,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFxB,CAFb;IAMIL,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeZ,IAAf;EANV,CADsB,CAA1B;EASE,OAAOC,QAAP;AACL;;AAED,eAAeF,WAAf,CAA2BC,IAA3B,EAAgC;EAC5B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAC1B;IACIC,MAAM,EAAE,MADZ;IAEIC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAiB,YAAYK,YAAY,CAACC,OAAb,CAAqB,OAArB;IAFxB,CAFb;IAMIL,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeZ,IAAf;EANV,CAD0B,CAA1B;EASA,OAAOC,QAAP;AACH"},"metadata":{},"sourceType":"module"}